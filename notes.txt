1. Create a class called employee 
- first name 
- last name 
- role_id 
- manager_id 

2. Create role class 
- title 
- salary 
-role ID

3.When creating a new employee 
Prompt for employee first name, last name, manager name, role title 
Based on manager name, get manager id 
Based on role title, get role id 
insert record into db

4. When creating a new role 
- Prompt for role and department name 
- based on department name, get department id
insert record into db

5. Update employee role 
prompt user for name of employee to update
show 
update db entry with user input 


_________________________________________________

// create database based on readme instructions
//Build a command-line application that at a minimum allows the user to:

// Add departments, roles, employees
    //when creating a new employee:
    //prompt for employee first name, last name, manager name, role title
    //based on manager name, get manager id (WHERE DOES THIS COME FROM?)
    //based on role title, get role id (JOIN?)
    //insert record into database

    //when creating a new role
    //prompt for role name and department name
    //based on department name, get department ID
    //insert record into database

//ask user if they want to view or update db entries

// View (departments, roles, employees)
    //prompt user to choose dept, role or employee
    //based on user choice, get list of depts, roles or employees from database

// Update employee roles
    //prompt user for name of employee to update
    //ask them which field they want to update (first name, last name, manager name, role title)
    //prompt user to enter new value for that field
    //update db entry with user input